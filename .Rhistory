runApp('C:/Users/Nathan/Documents/NOAA/DST_test')
runApp('C:/Users/Nathan/Documents/NOAA/DST_test')
runApp('C:/Users/Nathan/Documents/NOAA/DST_test')
runApp('C:/Users/Nathan/Documents/NOAA/DST_test')
runApp('C:/Users/Nathan/Documents/NOAA/DST_test')
runApp('C:/Users/Nathan/Documents/NOAA/DST_test')
runApp('C:/Users/Nathan/Documents/NOAA/DST_test')
runApp('C:/Users/Nathan/Documents/NOAA/DST_test')
shiny::runApp('C:/Users/Nathan/Documents/NOAA/DST_test')
rd_par(file="C:/Users/Nathan/Documents/NOAA/DST_test/YFT/Run5/ss3.par")
pars.new<-rd_par(file="C:/Users/Nathan/Documents/NOAA/DST_test/YFT/Run5/ss3.par")
rowsRecDev<-grep("# recdev1",pars.new$Labels)
rowsRecDev
rowsFirstFinit<-grep("# init_F",pars.new$Labels)[1]
pars.new$Values[[rowsRecDev]]
shiny::runApp('C:/Users/Nathan/Documents/NOAA/DST_test')
data.new
data.new$endyr
control.new$SR_EndYr
control.new
runApp('C:/Users/Nathan/Documents/NOAA/DST_test')
rd_ctl(file="C:/Users/Nathan/Documents/NOAA/DST_test/YFT/Run5/control.est2stanza.ctl",data.new)
runApp('C:/Users/Nathan/Documents/NOAA/DST_test')
runApp('C:/Users/Nathan/Documents/NOAA/DST_test')
NULL==6
if(NULL==6){}else{print("hmm")}
runApp('C:/Users/Nathan/Documents/NOAA/DST_test')
control.new
runApp('C:/Users/Nathan/Documents/NOAA/DST_test')
runApp('C:/Users/Nathan/Documents/NOAA/DST_test')
runApp('C:/Users/Nathan/Documents/NOAA/DST_test')
forecast.orig
runApp('C:/Users/Nathan/Documents/NOAA/DST_test')
runApp('C:/Users/Nathan/Documents/NOAA/DST_test')
runApp('C:/Users/Nathan/Documents/NOAA/DST_test')
runApp('C:/Users/Nathan/Documents/NOAA/DST_test')
runApp('C:/Users/Nathan/Documents/NOAA/DST_test')
runApp('C:/Users/Nathan/Documents/NOAA/DST_test')
runApp('C:/Users/Nathan/Documents/NOAA/DST_test')
forecast.orig
runApp('C:/Users/Nathan/Documents/NOAA/DST_test')
runApp('C:/Users/Nathan/Documents/NOAA/DST_test')
runApp('C:/Users/Nathan/Documents/NOAA/DST_test')
runApp('C:/Users/Nathan/Documents/NOAA/DST_test')
print(paste0("newValsTV = ",newValsTV[curr.Par]))
runApp('C:/Users/Nathan/Documents/NOAA/DST_test')
newVals[tvb]<-newVals[tvb]+newValsTV[curr.Par]
runApp('C:/Users/Nathan/Documents/NOAA/DST_test')
runApp('C:/Users/Nathan/Documents/NOAA/DST_test')
runApp('C:/Users/Nathan/Documents/NOAA/DST_test')
runApp('C:/Users/Nathan/Documents/NOAA/DST_test')
runApp('C:/Users/Nathan/Documents/NOAA/DST_test')
runApp('C:/Users/Nathan/Documents/NOAA/DST_test')
runApp()
runApp('C:/Users/Nathan/Documents/NOAA/DST_test')
runApp('C:/Users/Nathan/Documents/NOAA/DST_test')
runApp('C:/Users/Nathan/Documents/NOAA/DST_test')
runApp('C:/Users/Nathan/Documents/NOAA/DST_test')
runApp('C:/Users/Nathan/Documents/NOAA/DST_test')
runApp('C:/Users/Nathan/Documents/NOAA/DST_test')
runApp('C:/Users/Nathan/Documents/NOAA/DST_test')
runApp('C:/Users/Nathan/Documents/NOAA/DST_test')
runApp('C:/Users/Nathan/Documents/NOAA/DST_test')
catchmsy
msycatch
msyCatch
msyCatch[1:10]
msyCatch[1:10,]
msyCatch[22500:22576,]
CatchOut1<-baseCatch
CatchOut1<-cbind(CatchOut1[,1:4],forecast.orig$fleet_assignment_to_allocation_group[CatchOut1[,4]],CatchOut1[,5:15])
names(CatchOut1)<-c("Year","Season","Area","Fleet","Group","Retain(B)","Discard(B)","Retain(N)","Discard(N)","Retain(Basis)","HarvestRate(F)","SPR","SSB","Recruits","PopBiomass","F(Std)")
CatchOut1<-CatchOut1[order(CatchOut1[,3],CatchOut1[,1],CatchOut1[,2],CatchOut1[,4]),]
CatchOutMSY1<-msyCatch
CatchOutMSY1[,4]<-ifelse(CatchOutMSY1[,4]>data.orig$Nfleet,(CatchOutMSY1[,4]-data.orig$Nfleet),CatchOutMSY1[,4])
CatchOutMSY1<-aggregate(CatchOutMSY1,list(year=CatchOutMSY1[,1],season=CatchOutMSY1[,2],area=CatchOutMSY1[,3],fleet=CatchOutMSY1[,4]),sum)
CatchOutMSY1<-cbind(CatchOutMSY1[,1:4],forecast.orig$fleet_assignment_to_allocation_group[CatchOutMSY1[,4]],CatchOutMSY1[,9:19])
names(CatchOutMSY1)<-c("Year","Season","Area","Fleet","Group","Retain(B)","Discard(B)","Retain(N)","Discard(N)","Retain(Basis)","HarvestRate(F)","SPR","SSB","Recruits","PopBiomass","F(Std)")
CatchOutMSY1<-CatchOutMSY1[order(CatchOutMSY1[,3],CatchOutMSY1[,1],CatchOutMSY1[,2],CatchOutMSY1[,4]),]
CatchOutRun1<-newCatch
CatchOutRun1[,4]<-ifelse(CatchOutRun1[,4]>data.orig$Nfleet,(CatchOutRun1[,4]-data.orig$Nfleet),CatchOutRun1[,4])
CatchOutRun1<-aggregate(CatchOutRun1,list(year=CatchOutRun1[,1],season=CatchOutRun1[,2],area=CatchOutRun1[,3],fleet=CatchOutRun1[,4]),sum)
CatchOutRun1<-cbind(CatchOutRun1[,1:4],forecast.orig$fleet_assignment_to_allocation_group[CatchOutRun1[,4]],CatchOutRun1[,9:19])
names(CatchOutRun1)<-c("Year","Season","Area","Fleet","Group","Retain(B)","Discard(B)","Retain(N)","Discard(N)","Retain(Basis)","HarvestRate(F)","SPR","SSB","Recruits","PopBiomass","F(Std)")
CatchOutRun1<-CatchOutRun1[order(CatchOutRun1[,3],CatchOutRun1[,1],CatchOutRun1[,2],CatchOutRun1[,4]),]
CatchOutDiffMB1<-CatchOutRun1
CatchOutDiffMB1[,6:16]<-(CatchOutMSY1[,6:16]-CatchOut1[,6:16])
CatchOutDiffRB1<-CatchOutRun1
CatchOutDiffRB1[,6:16]<-(CatchOutRun1[,6:16]-CatchOut1[,6:16])
CatchOutDiffRM1<-CatchOutRun1
CatchOutDiffRM1[,6:16]<-(CatchOutRun1[,6:16]-CatchOutMSY1[,6:16])
CatchOutPercMB1<-CatchOutRun1
CatchOutPercMB1[,6:16]<-100*(CatchOutMSY1[,6:16]-CatchOut1[,6:16])/CatchOut1[,6:16]
CatchOutPercRB1<-CatchOutRun1
CatchOutPercRB1[,6:16]<-100*(CatchOutRun1[,6:16]-CatchOut1[,6:16])/CatchOut1[,6:16]
CatchOutPercRM1<-CatchOutRun1
CatchOutPercRM1[,6:16]<-100*(CatchOutRun1[,6:16]-CatchOutMSY1[,6:16])/CatchOutMSY1[,6:16]
CatchOutPropMB1<-CatchOutRun1
CatchOutPropMB1[,6:16]<-CatchOutMSY1[,6:16]/CatchOut1[,6:16]
CatchOutPropRB1<-CatchOutRun1
CatchOutPropRB1[,6:16]<-CatchOutRun1[,6:16]/CatchOut1[,6:16]
CatchOutPropRM1<-CatchOutRun1
CatchOutPropRM1[,6:16]<-CatchOutRun1[,6:16]/CatchOutMSY1[,6:16]
for(i in 6:16)
{
CatchOutPercMB1[,i]<-ifelse(!is.finite(CatchOutPercMB1[,i]),0,CatchOutPercMB1[,i])
CatchOutPercRB1[,i]<-ifelse(!is.finite(CatchOutPercRB1[,i]),0,CatchOutPercRB1[,i])
CatchOutPercRM1[,i]<-ifelse(!is.finite(CatchOutPercRM1[,i]),0,CatchOutPercRM1[,i])
CatchOutPropMB1[,i]<-ifelse(!is.finite(CatchOutPropMB1[,i]),1,CatchOutPropMB1[,i])
CatchOutPropRB1[,i]<-ifelse(!is.finite(CatchOutPropRB1[,i]),1,CatchOutPropRB1[,i])
CatchOutPropRM1[,i]<-ifelse(!is.finite(CatchOutPropRM1[,i]),1,CatchOutPropRM1[,i])
}
CatchMSYKobe<-CatchOutMSY1
KobeMSY<-sum(CatchMSYKobe[CatchMSYKobe[,1]>=input$TargetYears[1] & CatchMSYKobe[,1]<=input$TargetYears[2],6])/(input$TargetYears[2]-input$TargetYears[1]+1)
KobeSSBMSY<-sum(CatchMSYKobe[CatchMSYKobe[,1]>=input$TargetYears[1] & CatchMSYKobe[,1]<=input$TargetYears[2],13])/(input$TargetYears[2]-input$TargetYears[1]+1)
KobeBMSY<-sum(CatchMSYKobe[CatchMSYKobe[,1]>=input$TargetYears[1] & CatchMSYKobe[,1]<=input$TargetYears[2],15])/(input$TargetYears[2]-input$TargetYears[1]+1)
KobeFMSY<-sum(CatchMSYKobe[CatchMSYKobe[,1]>=input$TargetYears[1] & CatchMSYKobe[,1]<=input$TargetYears[2],16])/(input$TargetYears[2]-input$TargetYears[1]+1)
KobeY1<-sum(CatchMSYKobe[CatchMSYKobe[,1]==input$ManagementYearInput,6])
KobeSSB1<-sum(CatchMSYKobe[CatchMSYKobe[,1]==input$ManagementYearInput,13])
KobeB1<-sum(CatchMSYKobe[CatchMSYKobe[,1]==input$ManagementYearInput,15])
KobeF1<-sum(CatchMSYKobe[CatchMSYKobe[,1]==input$ManagementYearInput,16])
KobeY5<-sum(CatchMSYKobe[CatchMSYKobe[,1]==(input$ManagementYearInput+4),6])
KobeSSB5<-sum(CatchMSYKobe[CatchMSYKobe[,1]==(input$ManagementYearInput+4),13])
KobeB5<-sum(CatchMSYKobe[CatchMSYKobe[,1]==(input$ManagementYearInput+4),15])
KobeF5<-sum(CatchMSYKobe[CatchMSYKobe[,1]==(input$ManagementYearInput+4),16])
KobeY10<-sum(CatchMSYKobe[CatchMSYKobe[,1]==(input$ManagementYearInput+9),6])
KobeSSB10<-sum(CatchMSYKobe[CatchMSYKobe[,1]==(input$ManagementYearInput+9),13])
KobeB10<-sum(CatchMSYKobe[CatchMSYKobe[,1]==(input$ManagementYearInput+9),15])
KobeF10<-sum(CatchMSYKobe[CatchMSYKobe[,1]==(input$ManagementYearInput+9),16])
CatchNewKobe<-CatchOutRun1
CatchNewKobe<-aggregate(CatchNewKobe,list(year=CatchNewKobe[,1]),sum)
CatchNewKobe<-CatchNewKobe[,c(1,17,16)]
CatchNewKobe[,2]<-CatchNewKobe[,2]/KobeFMSY
CatchNewKobe[,3]<-CatchNewKobe[,3]/KobeBMSY
dataColOut<-c(1:5,6)
unitMod<-weightNames[disp.Desc$Units[1]]
CatchDisp<-CatchOutMSY1
CatchDisp2<-CatchOut1
potNamesCatch<-c("Year","Season","Area","Fleet","Group","Retain(B)","Discard(B)","Retain(N)","Discard(N)","Retain(Basis)","HarvestRate(F)","SPR","SSB","Recruits","PopBiomass","HarvestRate(F)")
CatchDisp<-CatchDisp[,dataColOut]
CatchDisp2<-CatchDisp2[,dataColOut]
CatchDisp
CatchDisp[11260:11288,]
CatchDisp[,3]<-rep(-99,length(CatchDisp[,3]))
CatchDisp2[,3]<-rep(-99,length(CatchDisp2[,3]))
CatchDisp[,2]<-rep(-99,length(CatchDisp[,2]))
CatchDisp2[,2]<-rep(-99,length(CatchDisp2[,2]))
length(unique(CatchDisp[,5]))
CatchDisp[,4]<-rep(-99,length(CatchDisp[,4]))
CatchDisp2[,4]<-rep(-99,length(CatchDisp2[,4]))
length(unique(CatchDisp[,5]))
CatchDisp<-aggregate(CatchDisp,list(year=CatchDisp[,1],season=CatchDisp[,2],area=CatchDisp[,3],fleet=CatchDisp[,4],group=CatchDisp[,5]),sum)
CatchDisp<-cbind(CatchDisp[,1:5],CatchDisp[,11])
names(CatchDisp)<-potNamesCatch[dataColOut]
CatchDisp<-CatchDisp[order(CatchDisp[,3],CatchDisp[,1],CatchDisp[,2],CatchDisp[,4]),]
CatchDisp[1300:1328,]
LegendVals<-aggregate(CatchDisp[,2:5],list(season=CatchDisp[,2],area=CatchDisp[,3],fleet=CatchDisp[,4],group=CatchDisp[,5]),sum)
LegendVals<-LegendVals[,1:4]
LegendNames<-LegendVals
LegendNames[,1]<-ifelse(LegendVals[,1]==-99,"", paste0(disp.Desc$SeasonNames[LegendVals[,1],2],", "))
LegendNames[,2]<-ifelse(LegendVals[,2]==-99,"", paste0(disp.Desc$AreaNames[LegendVals[,2],2],", "))
LegendNames[,3]<-ifelse(LegendVals[,3]==-99,"", disp.Desc$FleetNames[LegendVals[,3],2])
LegendNames[,4]<-ifelse(LegendVals[,4]==-99,"", paste0(disp.Desc$GroupNames[LegendVals[,4],2],", "))
xlimOut
CatchDisp[1:10,]
xlimOut<-c(2014,2035)
CatchTempOut<-CatchDisp[(CatchDisp[,1]>=xlimOut[1] & CatchDisp[,1]<=xlimOut[2]) | (CatchDisp[,1]>=xlimTargOut[1] & CatchDisp[,1]<=xlimTargOut[2]),]
xlimTargOut<-c(2100,2103)
CatchTempOut<-CatchDisp[(CatchDisp[,1]>=xlimOut[1] & CatchDisp[,1]<=xlimOut[2]) | (CatchDisp[,1]>=xlimTargOut[1] & CatchDisp[,1]<=xlimTargOut[2]),]
displayValsOut<-unique(paste0(LegendNames[,2],LegendNames[,1],LegendNames[,4],LegendNames[,3]))
displayValsOut
if(length(displayValsOut)==1){
if(displayValsOut==""){displayValsOut<-"Total"}}
if(length(displayValsOut)>15){
height<-400*(length(displayValsOut)/15)
}else{height<-'auto'}
CatchTempOut<-CatchTempOut[is.finite(CatchTempOut[,6]),]
ylimOut=c((min(CatchTempOut[,6],na.rm=TRUE)-0.05*max(abs(CatchTempOut[,6]),na.rm=TRUE)),(max(CatchTempOut[,6],na.rm=TRUE)+0.05*max(abs(CatchTempOut[,6]),na.rm=TRUE)))
ylabOut<-paste0(catMod2," (",unitMod,")")
unitMod<-weightNames[disp.Desc$Units[1]]
catMod<-"Catch"
catMod2<-"Catch"
sourceMod<-"Target"
ylabOut<-paste0(catMod2," (",unitMod,")")
mainOut<-paste0(sourceMod," Projected ",clustMod," ",catMod)
clustMod<-"Group"
mainOut<-paste0(sourceMod," Projected ",clustMod," ",catMod)
par(mar=c(5,4,4,0),oma=c(0,0,0,0))
plot(NA,main=mainOut,xlab='',ylab='',xlim=xlimOut,ylim=ylimOut,axes=FALSE)
eval(parse(text=paste0("output$",idOut1,"<-renderPlot({
par(mar=c(5,4,4,0),oma=c(0,0,0,0))
plot(NA,main=mainOut,xlab='',ylab='',xlim=xlimOut,ylim=ylimOut,axes=FALSE)
axis(1,at=c(input$displayYearsOut[1]:input$displayYearsOut[2],(input$displayYearsOut[2]+2)),labels=FALSE,cex=0.5,pos=ylimOut[1])
axis(1,at=c(labelPointOut,(input$displayYearsOut[2]+2)),labels=FALSE,cex=0.5,pos=ylimOut[1],lwd.ticks=2)
axis(1,at=c(labelPointOut,(input$displayYearsOut[2]+2)),labels=c(labelPointOut,'Target'),cex=0.5,pos=(ylimOut[1]+0.02*(ylimOut[2]-ylimOut[1])),tick=FALSE)
axis(2,pos=xlimOut[1],labels=FALSE)
axis(2,pos=(xlimOut[1]+0.01*(xlimOut[2]-xlimOut[1])),tick=FALSE)
title(xlab=xlabOut,ylab=ylabOut,line=1)
polygon(x=c(xlimOut[1],xlimOut[1],xlimOut[2],xlimOut[2]),y=c(ylimOut[1],1.0*ylimOut[2],1.0*ylimOut[2],ylimOut[1]))
for(i in 1:length(LegendVals[,1])){
CatchTempOut2<-CatchTempOut[CatchTempOut[,2]==LegendVals[i,1] & CatchTempOut[,3]==LegendVals[i,2] & CatchTempOut[,4]==LegendVals[i,3] & CatchTempOut[,5]==LegendVals[i,4],]
lines(x=CatchTempOut2[CatchTempOut2[,1]>=input$displayYearsOut[1] & CatchTempOut2[,1]<=input$displayYearsOut[2],1],y=CatchTempOut2[CatchTempOut2[,1]>=input$displayYearsOut[1] & CatchTempOut2[,1]<=input$displayYearsOut[2],6],lwd=2,col=colorChoicesOut[i])
points(x=(input$displayYearsOut[2]+2),y=mean(CatchTempOut2[CatchTempOut2[,1]>=input$TargetYears[1] & CatchTempOut2[,1]<=input$TargetYears[2],6]),pch=16,col=colorChoicesOut[i])
}
})",collapse = "")))
axis(1,at=c(input$displayYearsOut[1]:input$displayYearsOut[2],(input$displayYearsOut[2]+2)),labels=FALSE,cex=0.5,pos=ylimOut[1])
axis(1,at=c(labelPointOut,(input$displayYearsOut[2]+2)),labels=FALSE,cex=0.5,pos=ylimOut[1],lwd.ticks=2)
axis(1,at=c(labelPointOut,(input$displayYearsOut[2]+2)),labels=c(labelPointOut,'Target'),cex=0.5,pos=(ylimOut[1]+0.02*(ylimOut[2]-ylimOut[1])),tick=FALSE)
input<-list()
input$displayYearsOut<-c(2015,2030)
labelPointOut<-seq(input$displayYearsOut[1],input$displayYearsOut[2],max(1,floor((input$displayYearsOut[2]-input$displayYearsOut[1])/4)))
if((input$displayYearsOut[2]-input$displayYearsOut[1])>=10){
labelPointOut<-labelPointOut[-length(labelPointOut)]
}
axis(1,at=c(input$displayYearsOut[1]:input$displayYearsOut[2],(input$displayYearsOut[2]+2)),labels=FALSE,cex=0.5,pos=ylimOut[1])
par(mar=c(5,4,4,0),oma=c(0,0,0,0))
plot(NA,main=mainOut,xlab='',ylab='',xlim=xlimOut,ylim=ylimOut,axes=FALSE)
axis(1,at=c(input$displayYearsOut[1]:input$displayYearsOut[2],(input$displayYearsOut[2]+2)),labels=FALSE,cex=0.5,pos=ylimOut[1])
axis(1,at=c(labelPointOut,(input$displayYearsOut[2]+2)),labels=FALSE,cex=0.5,pos=ylimOut[1],lwd.ticks=2)
axis(1,at=c(labelPointOut,(input$displayYearsOut[2]+2)),labels=c(labelPointOut,'Target'),cex=0.5,pos=(ylimOut[1]+0.02*(ylimOut[2]-ylimOut[1])),tick=FALSE)
axis(2,pos=xlimOut[1],labels=FALSE)
axis(2,pos=(xlimOut[1]+0.01*(xlimOut[2]-xlimOut[1])),tick=FALSE)
title(xlab=xlabOut,ylab=ylabOut,line=1)
polygon(x=c(xlimOut[1],xlimOut[1],xlimOut[2],xlimOut[2]),y=c(ylimOut[1],1.0*ylimOut[2],1.0*ylimOut[2],ylimOut[1]))
for(i in 1:length(LegendVals[,1])){
CatchTempOut2<-CatchTempOut[CatchTempOut[,2]==LegendVals[i,1] & CatchTempOut[,3]==LegendVals[i,2] & CatchTempOut[,4]==LegendVals[i,3] & CatchTempOut[,5]==LegendVals[i,4],]
lines(x=CatchTempOut2[CatchTempOut2[,1]>=input$displayYearsOut[1] & CatchTempOut2[,1]<=input$displayYearsOut[2],1],y=CatchTempOut2[CatchTempOut2[,1]>=input$displayYearsOut[1] & CatchTempOut2[,1]<=input$displayYearsOut[2],6],lwd=2,col=colorChoicesOut[i])
points(x=(input$displayYearsOut[2]+2),y=mean(CatchTempOut2[CatchTempOut2[,1]>=input$TargetYears[1] & CatchTempOut2[,1]<=input$TargetYears[2],6]),pch=16,col=colorChoicesOut[i])
polygon(x=c(xlimOut[1],xlimOut[1],xlimOut[2],xlimOut[2]),y=c(ylimOut[1],1.0*ylimOut[2],1.0*ylimOut[2],ylimOut[1]))
xlabOut="Year"
title(xlab=xlabOut,ylab=ylabOut,line=1)
)
xlabOut="Year"
title(xlab=xlabOut,ylab=ylabOut,line=1)
polygon(x=c(xlimOut[1],xlimOut[1],xlimOut[2],xlimOut[2]),y=c(ylimOut[1],1.0*ylimOut[2],1.0*ylimOut[2],ylimOut[1]))
for(i in 1:length(LegendVals[,1])){
CatchTempOut2<-CatchTempOut[CatchTempOut[,2]==LegendVals[i,1] & CatchTempOut[,3]==LegendVals[i,2] & CatchTempOut[,4]==LegendVals[i,3] & CatchTempOut[,5]==LegendVals[i,4],]
lines(x=CatchTempOut2[CatchTempOut2[,1]>=input$displayYearsOut[1] & CatchTempOut2[,1]<=input$displayYearsOut[2],1],y=CatchTempOut2[CatchTempOut2[,1]>=input$displayYearsOut[1] & CatchTempOut2[,1]<=input$displayYearsOut[2],6],lwd=2,col=colorChoicesOut[i])
points(x=(input$displayYearsOut[2]+2),y=mean(CatchTempOut2[CatchTempOut2[,1]>=input$TargetYears[1] & CatchTempOut2[,1]<=input$TargetYears[2],6]),pch=16,col=colorChoicesOut[i])
}
color <- grDevices::colors()[grep('gr(a|e)y', grDevices::colors(), invert = T)]
color <- color[8:433]
color <- sample(color,length(color))
color <- c("red","dark blue","dark green", "gold", "pink", "purple","black","cyan","brown",color)
color <- unique(color)
colorChoicesOut <- color
for(i in 1:length(LegendVals[,1])){
CatchTempOut2<-CatchTempOut[CatchTempOut[,2]==LegendVals[i,1] & CatchTempOut[,3]==LegendVals[i,2] & CatchTempOut[,4]==LegendVals[i,3] & CatchTempOut[,5]==LegendVals[i,4],]
lines(x=CatchTempOut2[CatchTempOut2[,1]>=input$displayYearsOut[1] & CatchTempOut2[,1]<=input$displayYearsOut[2],1],y=CatchTempOut2[CatchTempOut2[,1]>=input$displayYearsOut[1] & CatchTempOut2[,1]<=input$displayYearsOut[2],6],lwd=2,col=colorChoicesOut[i])
points(x=(input$displayYearsOut[2]+2),y=mean(CatchTempOut2[CatchTempOut2[,1]>=input$TargetYears[1] & CatchTempOut2[,1]<=input$TargetYears[2],6]),pch=16,col=colorChoicesOut[i])
}
par(mar=c(0,0,0,0),oma=c(0,0,0,0))
plot(NA,main='',xlab='',ylab='',xlim=c(0,1),ylim=c(0,1),axes=FALSE)
legend(x=0,y=1,legend=displayValsOut,lty=1,lwd=2,col=colorChoicesOut[1:length(displayValsOut)],title='Display Categories')
runApp('C:/Users/Nathan/Documents/NOAA/DST_test')
{
if(input$displayRadioButtonOut2=="Weight")
{
dataColOut<-c(1:5,7)
unitMod<-weightNames[disp.Desc$Units[1]]
}else if(input$displayRadioButtonOut2=="Number")
{
dataColOut<-c(1:5,9)
unitMod<-"1000's"
}
catMod<-"Dead Discards"
catMod2<-"Dead Discards"
}
runApp('C:/Users/Nathan/Documents/NOAA/DST_test')
DEV_Params
Select_Params[Select_Params[,9]!=0,]
runApp('C:/Users/Nathan/Documents/NOAA/DST_test')
runApp('C:/Users/Nathan/Documents/NOAA/DST_test')
runApp('C:/Users/Nathan/Documents/NOAA/DST_test')
View(data.new)
runApp('C:/Users/Nathan/Documents/NOAA/DST_test')
View(data.new)
View(data.orig)
View(data.new)
View(data.new)
runApp('C:/Users/Nathan/Documents/NOAA/DST_test')
runApp('C:/Users/Nathan/Documents/NOAA/DST_test')
runApp('C:/Users/Nathan/Documents/NOAA/DST_test')
dir.orig
dir.orig<-"C:/Users/Nathan/Documents"
starter.test<-SS_readstarter(paste0(dir.orig,"/starter.ss"))
View(starter.test)
data.test<-SS_readdat(file=paste0(dir.orig,"/",starter.test$datfile))
View(data.test)
data.test<-SS_readdat(file=paste0(dir.orig,"/",starter.test$datfile))
View(data.test)
data.test<-SS_readdat(file=paste0(dir.orig,"/",starter.test$datfile))
View(data.test)
data.test<-SS_readdat(file=paste0(dir.orig,"/",starter.test$datfile))
View(data.test)
starter.test<-SS_readstarter(paste0(dir.orig,"/starter.ss"))
data.test<-SS_readdat(file=paste0(dir.orig,"/",starter.test$datfile))
View(data.test)
View(data.test)
dir.orig
paste0(dir.orig,"/",starter.test$datfile)
data.test<-NULL
data.test<-SS_readdat(file=paste0(dir.orig,"/",starter.test$datfile))
View(data.test)
data.test<-SS_readdat(file=paste0(dir.orig,"/",starter.test$datfile))
data.test<-SS_readdat(file=paste0(dir.orig,"/",starter.test$datfile))
data.test<-SS_readdat(file=paste0(dir.orig,"/",starter.test$datfile))
View(data.test)
View(data.test)
data.test<-SS_readdat(file=paste0(dir.orig,"/",starter.test$datfile))
View(data.test)
View(data.test)
data.test<-SS_readdat(file=paste0(dir.orig,"/",starter.test$datfile))
data.test<-SS_readdat(file=paste0(dir.orig,"/",starter.test$datfile))
View(data.test)
data.test<-SS_readdat(file=paste0(dir.orig,"/",starter.test$datfile))
runApp('C:/Users/Nathan/Documents/NOAA/DST_test')
View(control.new)
runApp('C:/Users/Nathan/Documents/NOAA/DST_test')
runApp('C:/Users/Nathan/Documents/NOAA/DST_test')
runApp('C:/Users/Nathan/Documents/NOAA/DST_test')
runApp('C:/Users/Nathan/Documents/NOAA/DST_test')
runApp('C:/Users/Nathan/Documents/NOAA/DST_test')
runApp('C:/Users/Nathan/Documents/NOAA/DST_test')
runApp('C:/Users/Nathan/Documents/NOAA/DST_test')
runApp('C:/Users/Nathan/Documents/NOAA/DST_test')
runApp('C:/Users/Nathan/Documents/NOAA/DST_test')
runApp('C:/Users/Nathan/Documents/NOAA/DST_test')
runApp('C:/Users/Nathan/Documents/NOAA/DST_test')
runApp('C:/Users/Nathan/Documents/NOAA/DST_test')
runApp('C:/Users/Nathan/Documents/NOAA/DST_test')
runApp('C:/Users/Nathan/Documents/Decision Support Tool/shiny')
webshot(url="http:/127.0.0.1:3991",file="C:/Users/Nathan/Desktop/testScreenShot.png")
library(webshot)
webshot(url="http:/127.0.0.1:3991",file="C:/Users/Nathan/Desktop/testScreenShot.png")
webshot(url="http:/127.0.0.1:3991",file="C:/Users/Nathan/Desktop/testScreenShot2.png")
exp(-1)
exp(1)
exp(-0.661435)
exp(-0.661435)*(-0.0250829497823)
exp(-0.66)
log(-0.66)
log(0.66)
exp(-0.4155154)
temp<-rbind(output.orig$SelSizeAdj,output.orig$SelAgeAdj)
forecast.orig
temp<-output.orig$SelSizeAdj[output.orig$SelSizeAdj>=forecast.orig$Fcast_years[,1] & output.orig$SelSizeAdj<=forecast.orig$Fcast_years[,2],]
temp<-aggregate(temp,list(fleet=temp[,1]),mean)
temp<-as.matrix(temp[,-c(1,2)])
temp<-c(t(temp))
temp<-output.orig$SelSizeAdj[output.orig$SelSizeAdj>=forecast.orig$Fcast_years[1] & output.orig$SelSizeAdj<=forecast.orig$Fcast_years[2],]
temp<-aggregate(temp,list(fleet=temp[,1]),mean)
temp<-as.matrix(temp[,-c(1,2)])
temp<-c(t(temp))
temp
temp<-output.orig$SelSizeAdj[output.orig$SelSizeAdj>=forecast.orig$Fcast_years[1] & output.orig$SelSizeAdj<=forecast.orig$Fcast_years[2],]
temp<-aggregate(temp,list(fleet=temp[,1]),mean)
temp<-output.orig$SelSizeAdj[output.orig$SelSizeAdj>=forecast.orig$Fcast_years[1] & output.orig$SelSizeAdj<=forecast.orig$Fcast_years[2],]
temp2<-output.orig$SelAgeAdj[output.orig$SelAgeAdj>=forecast.orig$Fcast_years[1] & output.orig$SelAgeAdj<=forecast.orig$Fcast_years[2],]
temp2<-aggregate(temp2,list(fleet=temp2[,1]),mean)
temp2<-as.matrix(temp2[,-c(1,2)])
temp2<-c(t(temp2))
temp2<-output.orig$SelAgeAdj[output.orig$SelAgeAdj>=forecast.orig$Fcast_years[1] & output.orig$SelAgeAdj<=forecast.orig$Fcast_years[2],]
output.orig$SelAgeAdj
newVals
temp
temp<-output.orig$SelSizeAdj[output.orig$SelSizeAdj[,2]>=forecast.orig$Fcast_years[1] & output.orig$SelSizeAdj[,2]<=forecast.orig$Fcast_years[2],]
temp<-output.orig$SelSizeAdj[output.orig$SelSizeAdj[,2]>=forecast.orig$Fcast_years[1] & output.orig$SelSizeAdj[,2]<=forecast.orig$Fcast_years[2],]
output.orig$SelSizeAdj
forecast.orig$Fcast_years
fi=1
forecast.orig$Fcast_years[fi]
forecast.orig$Fcast_years[fi]<=0
data.orig$endyr-forecast.orig$Fcast_years[fi]
forecast.orig$Fcast_years[fi]<<-data.orig$endyr-forecast.orig$Fcast_years[fi]
forecast.orig$Fcast_years[fi]<-data.orig$endyr-forecast.orig$Fcast_years[fi]
forecast.orig$Fcast_years[fi]
forecast.orig$Fcast_years
2014-8
shiny::runApp('C:/Users/Nathan/Documents/NOAA/DST_test')
runApp('C:/Users/Nathan/Documents/NOAA/DST_test')
runApp('C:/Users/Nathan/Documents/NOAA/DST_test')
runApp('C:/Users/Nathan/Documents/NOAA/DST_test')
runApp('C:/Users/Nathan/Documents/NOAA/DST_test')
runApp('C:/Users/Nathan/Documents/NOAA/DST_test')
runApp('C:/Users/Nathan/Documents/NOAA/DST_test')
runApp('C:/Users/Nathan/Documents/NOAA/DST_test')
test<-read.csv("C:/Users/Nathan/Documents/taxes/2017 tax return/LenderTransactions.csv")
test
test2<-test[test$Type=="Interest payment"]
test2<-test[test$Type=="Interest payment",]
test2
sum(test2$Amount)
sum(test2$Amount[1:388])
test2$Amount[1:388]
test2$Amount
test2
test2$Amount
test2$Amount[1:98]
sum(test2$Amount[1:98])
test
test$Interest
test$Interest[1:389]
sum(test$Interest[1:389])
sum(test$Fee[1:389])
test3<-read.csv(file="C:/Users/Nathan/Documents/taxes/2017 tax return/MarketLend.csv")
test3
test4<-test3[test3$Date<01/01/2018,]
test4<-test3[186:521,]
test4
test4<-test4[,3:6]
test4
test4[grep(test4$Description,"Interest")]
test4[grep("Interest",test4$Description)]
test4[grep("Interest",test4[,1])]
test4[grep("Interest",test4[,1]),]
test5<-test4[grep("Interest",test4[,1]),]
test6<-test4[grep("Fee",test4[,1]),]
test4
test6<-test4[grep("fee",test4[,1]),]
test5
test6
sum(test6[,3])
sum(test5[,2])
sum(test5[,2])+sum(test6[,3])
runApp('C:/Users/Nathan/Documents/NOAA/DST_test')
shiny::runApp('C:/Users/Nathan/Documents/Decision_Support_Tool/shiny')
runApp('C:/Users/Nathan/Documents/Decision_Support_Tool/shiny')
runApp('C:/Users/Nathan/Documents/Decision_Support_Tool/shiny')
print(output.orig$SelAgeAdj)
output.orig$SelSizeAdj
output.orig$SelAgeAdj
runApp('C:/Users/Nathan/Documents/Decision_Support_Tool/shiny')
shiny::runApp('C:/Users/Nathan/Documents/GitHub/PSA_Shiny')
runApp('C:/Users/Nathan/Documents/GitHub/PSA_Shiny')
1:3
View(CatchAll)
runApp('C:/Users/Nathan/Documents/GitHub/PSA_Shiny')
runApp('C:/Users/Nathan/Documents/GitHub/PSA_Shiny')
runApp('C:/Users/Nathan/Documents/GitHub/PSA_Shiny')
test<-list()
test[[1]]<-"apple"
test[[2]]<-"panda"
test[[3]]<-"sink"
test[[-1]]
runApp('C:/Users/Nathan/Documents/GitHub/PSA_Shiny')
runApp('C:/Users/Nathan/Documents/GitHub/PSA_Shiny')
runApp('C:/Users/Nathan/Documents/GitHub/PSA_Shiny')
runApp('C:/Users/Nathan/Documents/GitHub/PSA_Shiny')
test<-c(9,8,1,2,3,4,5,6)
which(test==2)
split
which(split=="SecondTry"
)
names(split)<-c("one","two","three","gour","sdf","dsf","awe4r","hge")
split
which(split=="SecondTry"
)
which(split=="SecondTry")[1]
test
test[which(split=="SecondTry")]
test[which(split==c("SecondTry","SuperFish"))]
runApp('C:/Users/Nathan/Documents/GitHub/PSA_Shiny')
runApp('C:/Users/Nathan/Documents/GitHub/PSA_Shiny')
runApp('C:/Users/Nathan/Documents/GitHub/PSA_Shiny')
getwd()
setwd("C:/Users/Nathan/Documents/GitHub/PSA_Shiny")
inputData.temp<-read.csv(file=paste0(getwd(),"/Assessments/",input$xyChoice[j]),header=TRUE,row.names = 1)
inputData.temp<-read.csv(file=paste0(getwd(),"/Assessments/",Example.csv),header=TRUE,row.names = 1)
inputData.temp<-read.csv(file=paste0(getwd(),"/Assessments/","Example.csv"),header=TRUE,row.names = 1)
inputData.temp
inputData.temp[1,1]
inputData.temp[1,]
inputData.temp[1,1:3]
inputData.temp[1,1]
inputData.temp[1,2]
inputData.temp[1,3]
runApp()
runApp()
runApp()
runApp()
runApp()
library("rsconnect", lib.loc="C:/Users/Nathan/Documents/R/win-library/3.4")
getwd()
deployApp()
shiny::runApp()
runApp()
library("rsconnect", lib.loc="C:/Users/Nathan/Documents/R/win-library/3.4")
library("shiny", lib.loc="C:/Users/Nathan/Documents/R/win-library/3.4")
library("shinyjs", lib.loc="C:/Users/Nathan/Documents/R/win-library/3.4")
deployApp()
shiny::runApp()
runApp()
test<-c(1,2,3,4,5,6,7,8,9,10)
test2<-quantile(test,probs=c(0.025,0.25,0.5,0.75,0.975))
test2
c(1,2,test2)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
length(test[test<5])
length(test[test<c(5,6,7)])
runApp()
runApp()
runApp()
runApp()
library(rsconnect)
deployApp()
